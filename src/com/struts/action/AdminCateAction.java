/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.util.*;
import javax.servlet.http.*;
import org.apache.struts.action.*;
import com.ORM.*;
import com.base.*;
import com.service.*;
import com.struts.form.CateForm;

/** 
 * MyEclipse Struts
 * XDoclet definition:
 * @struts.action path="/Admin/adminCate" name="cateForm" input="/Admin/adminAddCate.jsp" parameter="method" scope="request" validate="true"
 */
public class AdminCateAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addCate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CateForm cateForm = (CateForm) form;
		Category cate = new Category();
		cate.setCateName(cateForm.getCateName().trim());
		cate.setCateDesc(cateForm.getCateDesc().trim());
		MerService service = new MerServiceImpl();
		ActionMessages msgs = new ActionMessages();
		try{
			boolean status = service.addCategory(cate);
			if (status){
				msgs.add("addCateStatus",new ActionMessage(Constants.ADDCATE_SUC_KEY));
			}else{				
				msgs.add("addCateStatus",new ActionMessage(Constants.ADDCATE_FAIL_KEY));
			}
			saveErrors(request, msgs);
		}catch(Exception ex){
			logger.info("在执行AdminCateAction类中的addCate方法时出错：\n");
			ex.printStackTrace();
		}
		return mapping.getInputForward();
	}
	
	public ActionForward browseCate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		List list = null;
		MerService service = new MerServiceImpl();
		Admin admin = (Admin)request.getSession().getAttribute("Admin");
		if (admin==null||(admin.getAdminType().intValue() !=1 && admin.getAdminType().intValue() !=4)){
			return mapping.findForward("sorry");
		}
		try{
			list = service.browseCategory();
			request.setAttribute("categoryList", list);
		}catch(Exception ex){
			logger.info("在执行AdminCateAction类中的browseCate方法时出错：\n");
			ex.printStackTrace();
		}
		return mapping.findForward("browse");		
	}
	
	public ActionForward delCate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ActionMessages msgs = new ActionMessages();
		MerService service = new MerServiceImpl();
		String p = request.getParameter("id");
		Integer id = null;
		if(p!=null){
			id = new Integer(p);
		}else{
			id = new Integer(0);
		}
		try{
			boolean status = service.delCategory(id);
			if (status){
				msgs.add("delCateStatus",new ActionMessage(Constants.DELCATE_SUC_KEY));
			}else{				
				msgs.add("delCateStatus",new ActionMessage(Constants.DELCATE_FAIL_KEY));
			}			
			saveErrors(request, msgs);
		}catch(Exception ex){
			logger.info("在执行AdminCateAction类中的delCate方法时出错：\n");
			ex.printStackTrace();
		}
		return mapping.findForward("delete");		
	}
	
	public ActionForward loadCate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ActionMessages msgs = new ActionMessages();
		MerService service = new MerServiceImpl();
		Category cate = null;
		String p = request.getParameter("id");
		Integer id = null;
		if(p!=null){
			id = new Integer(p);
		}else{
			id = new Integer(0);
		}
		try{
			cate = service.loadCategory(id);
			if(cate!=null){
				form = new CateForm();
				((CateForm)form).setCateName(cate.getCateName().trim());
				((CateForm)form).setCateDesc(cate.getCateDesc().trim());
				request.setAttribute("cateForm", form);
				request.setAttribute("id", cate.getId());
			}
		}catch(Exception ex){
			logger.info("在执行AdminCateAction类中的loadCate方法时出错：\n");
			ex.printStackTrace();
		}
		return mapping.findForward("modify");		
	}
	
	public ActionForward modiCate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CateForm cateForm = (CateForm) form;
		Category cate = null;
		MerService service = new MerServiceImpl();
		ActionMessages msgs = new ActionMessages();
		String p = request.getParameter("id");
		Integer id = null;
		if(p!=null){
			id = new Integer(p);
		}else{
			id = new Integer(0);
		}
		try{
			cate = service.loadCategory(id);
			if (cate!=null){
				cate.setCateName(cateForm.getCateName().trim());
				cate.setCateDesc(cateForm.getCateDesc().trim());
				boolean status = service.updateCategory(cate);
				if (status){
					msgs.add("modiCateStatus",new ActionMessage(Constants.MODICATE_SUC_KEY));
				}else{				
					msgs.add("modiCateStatus",new ActionMessage(Constants.MODICATE_FAIL_KEY));
				}				
			}else{
				msgs.add("modiCateStatus",new ActionMessage(Constants.MODICATE_FAIL_KEY));
			}
			saveErrors(request, msgs);
		}catch(Exception ex){
			logger.info("在执行AdminCateAction类中的modiCate方法时出错：\n");
			ex.printStackTrace();
		}
		return mapping.findForward("modify");		
	}
}